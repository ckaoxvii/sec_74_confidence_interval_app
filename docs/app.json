[{"name":"app.R","content":"library(shiny)\nlibrary(bslib)\n\nui <- page_sidebar(\n  title = \"Confidence Interval Calculator for Proportions\",\n  sidebar = sidebar(\n    numericInput(\n      \"sample_prop\",\n      \"Sample Proportion (p̂):\",\n      value = 0.5,\n      min = 0,\n      max = 1,\n      step = 0.01\n    ),\n    numericInput(\n      \"sample_size\",\n      \"Sample Size (n):\",\n      value = 100,\n      min = 1,\n      step = 1\n    ),\n    numericInput(\n      \"confidence_level\",\n      \"Confidence Level (%):\",\n      value = 95,\n      min = 1,\n      max = 99.9,\n      step = 0.1\n    )\n  ),\n  \n  card(\n    card_header(\"Results\"),\n    card_body(\n      h4(\"Standard Error\"),\n      verbatimTextOutput(\"standard_error\"),\n      br(),\n      h4(\"Confidence Interval\"),\n      verbatimTextOutput(\"confidence_interval\"),\n      br(),\n      h4(\"Interpretation\"),\n      textOutput(\"interpretation\")\n    )\n  )\n)\n\nserver <- function(input, output) {\n  \n  # Calculate standard error\n  standard_error <- reactive({\n    p_hat <- input$sample_prop\n    n <- input$sample_size\n    \n    # Standard error formula: sqrt(p̂(1-p̂)/n)\n    se <- sqrt(p_hat * (1 - p_hat) / n)\n    return(se)\n  })\n  \n  # Calculate confidence interval\n  confidence_interval <- reactive({\n    p_hat <- input$sample_prop\n    conf_level <- input$confidence_level / 100\n    se <- standard_error()\n    \n    # Calculate critical value (z-score)\n    alpha <- 1 - conf_level\n    z_critical <- qnorm(1 - alpha/2)\n    \n    # Calculate margin of error\n    margin_error <- z_critical * se\n    \n    # Calculate confidence interval bounds\n    lower_bound <- p_hat - margin_error\n    upper_bound <- p_hat + margin_error\n    \n    # Ensure bounds are within [0, 1]\n    lower_bound <- max(0, lower_bound)\n    upper_bound <- min(1, upper_bound)\n    \n    return(c(lower_bound, upper_bound))\n  })\n  \n  # Output standard error\n  output$standard_error <- renderText({\n    se <- standard_error()\n    paste0(\"SE = \", round(se, 6))\n  })\n  \n  # Output confidence interval\n  output$confidence_interval <- renderText({\n    ci <- confidence_interval()\n    conf_level <- input$confidence_level\n    paste0(conf_level, \"% CI: (\", round(ci[1], 4), \", \", round(ci[2], 4), \")\")\n  })\n  \n  # Output interpretation\n  output$interpretation <- renderText({\n    conf_level <- input$confidence_level\n    ci <- confidence_interval()\n    paste0(\"We are \", conf_level, \"% confident that the true population proportion \",\n           \"lies between \", round(ci[1], 4), \" and \", round(ci[2], 4), \".\")\n  })\n}\n\nshinyApp(ui = ui, server = server) \n","type":"text"}]
